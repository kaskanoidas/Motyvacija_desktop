<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutEN" xml:space="preserve">
    <value>There are five concepts related to each other in the life of any human being - THE GOAL ITSELF, GOAL-ORIENTED ACTIVITY, MOTIVATION, OUTCOME AND REWARD.

If a person has set a goal for himself/herself and is well motivated while performing a goal-oriented activity, he/she will achieve results and will be awarded for this. Inner motivation is the main driving force which helps achieve the desired goal.

It is absolutely necessary that the goals of a team or a company also become the personal goals of its members or employees through broad participation in the process of setting and achieving these goals. It is only then that goal-oriented activity would lead to the desired results. And the inner motivation would help to get them with everybody earning a certain amount of money for the results achieved.

This program is designed to help calculate components of employee ' s salary (gratification), i.e. a variable part, which depends on team or company goals and the achieved goal-oriented results. There is still another component, another variable part which depends on task execution by the said employee, feedback from consumers reports or results of the market research.

This program allows to neglect the so called "human factor" when calculating salaries of the employees who earn result-related wages that depend on the achieved results of the said company as well as on its salary fund.

This program is based on an algorithm which evaluates goal achieving effectiveness. The goals are defined by key performance indicators of the company.

When evaluating employee task execution or carrying out a consumer feedback research, the consumers evaluate the task performance of the company employees of the company and check their competence and knowledge through a range of tests. Thus effectiveness of the evaluation obtained can reach its potential maximum.

Taking this into account, the salary should be calculated as follows:

SALARY = BASIC SALARY + PERFORMANCE-RELATED VARIABLE PART + TASK-RELATED VARIABLE PART

BASIC SALARY is a fixed component of the payment, which is to be determined for each employee separately and depends on company ' s strategy, cost-effectiveness and the salary funds as well as on employee ' s competence, his/her position, responsibilities etc. Each company develops its own methodology for a basic salary calculations. Also, a minimum wage set by an individual state authority may be used.

PERFORMANCE-RELATED VARIABLE PART is the most important component of the salary. The majority of companies implement various business activity management systems based on a set of key performance indicators. One may refer to the following systems: BSC (Balanced Score Card), Lean, TOC and others. Well known are such indicators as PROFIT, COSTS, PRODUCTION VOLUME and others, which we intend to refer to as INDICATOR A, INDICATOR B, INDICATOR C etc.

When planning its activity, a company sets goals and target values of indicators: TARGET A, TARGET B, TARGET C etc. (increase the PROFIT , reduce the COSTS, expand PRODUCTION VOLUME etc.) After such information was obtained a company is able to calculate what maximum salary funds should be if the goals were met, i.e. MAXIMUM PERFORMANCE-RELATED VARIABLE PART (MaxVP for PERFORMANCE) , and also we divide this amount according to the importance of the indicators proportionally to the indicators: MaxVP A, MaxVP B, MaxVP C etc.

MaxVP for PERFORMANCE = MaxVP A + MaxVP B + MaxVP C + ...

A company determines for each employee a maximum performance-related variable part based on selected indicators. Knowing the BASELINE (initial) values of indicators: BASELINE A, BASELINE B, BASELINE C etc . , TARGET values : TARGET A, TARGET B, TARGET C etc., and after measuring at a given period of time the ACTUAL OUTCOME values of indicators : ACTUAL A, ACTUAL B, ACTUAL C etc., performance-related variable parts can be calculated: VARIABLE A, VARIABLE B, VARIABLE C etc. Thus:

PERFORMANCE-RELATED VARIABLE PART = VARIABLE A + VARIABLE B + VARIABLE C + ...

TASK-RELATED VARIABLE PART - if the company employees execute various tasks a need to evaluate the effectiveness of these tasks execution arises. An employee can carry out several tasks: TASK X, TASK Y, TASK Z etc. The tasks classified as their importance increase can be evaluated using different point scales (systems), i.e. maximum evaluation of each task can be different. One gets used to the same evaluation scales taught at school where all subjects are assessed using the same point scales with 10 points maximum for all subjects. Suppose, the maximum task evaluations are as follows: MaxVAL X, MaxVAL Y, MaxVAL Z etc. If an employee has completed all tasks in full and got the maximum evaluations marks, he/she gets MAXIMUM TASK-RELATED VARIABLE PART (MaxVPT), which is to be determined in accordance with possibilities of a company and task importance for the said company ' s goal achievement.

A SAMPLE: this is an elementary example to demonstrate how the program functions. For example, the goals of a company are described by two indicators : A - PROFIT and B - COSTS .

MARKO, a senior manager (let us place his name on the list of employees of the program), through realization of the tasks allocated to him, will influence the abovementioned indicators. BASIC PART FOR MARKO to be entered: BASIC = 1000 . Enter the following values of indicators:

PROFIT: BASELINE 100000; TARGET 130000; ACTUAL 121000;

COSTS: BASELINE 500000; TARGET 450000; ACTUAL 480000;

MARKO is motivated for TASK execution as well:

X- RELATIONSHIP WITH THE CLIENTS MaxVAL = 11 Evaluation = 9 points;

Y- CUTTING ON THE RETURN OF GOODS BY CLIENTS MaxVAL = 9 Evaluation = 5 points;

Z- IMPROVING PROFESSIONAL SKILLS MaxVAL = 7; Evaluation = 6 points;

If the company achieved its goals according to these indicators, and MARKO received the highest evaluations for the task execution, the company would pay to him an extra MAXIMUM VARIABLE PART 2700:

Enter PROFIT- related MaxVP 1200;

Enter COSTS- related MaxVP 800;

Enter TASK -related MaxVPT 700;

Still, having made calculations using actual values of indicators and evaluations of the actual tasks, we obtain that VARIABLE PART is equal to 1679:

PERFORMANCE-RELATED VARIABLE PART 1160;

TASK-RELATED VARIABLE PART 519;

In total this month MARKO earned:

SALARY = 1000 + 1160 + 519 = 2679;

He could earn maximum SALARY of 3700.</value>
  </data>
  <data name="AboutLT" xml:space="preserve">
    <value>VEIKLA,  TIKSLAS,  MOTYVACIJA,  REZULTATAS,  ATLYGINIMAS - tai penkios sąvokos, kurios paliečia kiekvieną žmogų. Kiekvienas, kuris vykdo veiklą, turi tikslą, vidinę motyvaciją, pasiekia rezultatus ir už tai jam būna atlyginta. Vidinė motyvacija - pagrindinis tikslo siekimo variklis.

Tam, kad įmonės ar komandos tikslai taptų kiekvieno jos nario tikslais, būtina, kad kiekvienas dalyvautų šių tikslų formavime, nustatyme. Tuomet, įgyvendinant užsibrėžtus tikslus, atsiranda vidinė motyvacija, kuri padeda pasiekti geriausių rezultatų, o taip pat visi gauna atlyginimą pagal pasiektus rezultatus.

Šios programos paskirtis - apskaičiuoti darbuotojų kintamą atlyginimo dalį, kuri priklauso nuo įmonės ar komandos tikslų ir gautų rezultatų, įgyvendinant šiuos tikslus, o taip pat papildomą kintamą atlyginimo dalį, kuri priklauso nuo darbuotojo užduočių vykdymo, vartotojų vertinimo ar testų rezultatų.

Visa tai leidžia išvengti "Žmogiškojo faktoriaus" apskaičiuojant darbuotojų atlyginimus, nes visiems atlyginama pagal pasiektus rezultatus ir įmonės galimybes.

Šios programos pagrindą sudaro tikslo siekimo efektyvumo įvertinimo algoritmas, kuriame tikslai aprašomi pagrindiniais įmonės veiklos rodikliais.

Vertinant darbuotojų užduočių vykdymą arba vykdant vartotojų apklausą, kada vartotojai vertina įmonės darbuotojus, bei tikrinant kompetenciją ir žinias testų pagalba, apskaičiuojamas gauto įvertinimo efektyvumas maksimalaus galimo įvertinimo atžvilgiu.

Atsižvelgiant į tai, atlyginimas apskaičiuojamas taip:

ATLYGINIMAS  =  BAZINIS ATLYGINIMAS  +  KINTAMA DALIS PAGAL RODIKLIUS  +  KINTAMA DALIS PAGAL UŽDUOTIS

BAZINIS ATLYGINIMAS - tai fiksuota atlyginimo dalis, kuri nustatoma kiekvienam darbuotojui pagal įmonės galimybes, darbuotojo kompetenciją, pareigas, atsakomybes ir t.t. Kiekviena įmonė turi savo metodiką. Galima remtis ir valstybės nustatytu minimaliu atlyginimu.

KINTAMA DALIS PAGAL RODIKLIUS - tai svarbiausia atlyginimo dedamoji. Dauguma įmonių yra įdiegusios verslo veiklos valdymo sistemas, kurios paremtos rodiklių visuma. Prie tokių galima priskirti BSC (Balanced Score Card), Lean, TOC ir kitas. Visiems žinomi tokie rodikliai kaip PELNAS, KAŠTAI, GAMYBOS APIMTYS ir kiti, kuriuos tiesiog vadinsime RODIKLIS A,  RODIKLIS B,  RODIKLIS C ir t.t.

Įmonės, planuodamos savo veiklą, nustato savo tikslus ir tikslines rodiklių reikšmes: TIKSLINĖ A, TIKSLINĖ B,  TIKSLINĖ C ir t.t. ( padidinti PELNĄ , sumažinti KAŠTUS, padidinti GAMYBOS APIMTIS  ir panašiai). Turėdami šią informaciją, galime apskaičiuoti, koks gali būti maksimalus atlyginimų fondas, jei tikslai bus pasiekti, t.y. MAKSIMALIĄ KINTAMĄ DALĮ PAGAL RODIKLIUS (MaxKD RODIKLIŲ), o taip pat pagal rodiklių svarbą šią suma padaliname proporcingai rodikliams: MaxKD A,  MaxKD B,  MaxKD C ir t.t.

MaxKD RODIKLIŲ = MaxKD A +  MaxKD B  +  MaxKD C  + …

Analogiškai, kiekvienam darbuotojui, pagal pasirinktus rodiklius nustatome maksimalias kintamas dalis. Žinodami BAZINES (pradines) rodiklių reikšmes: BAZINĖ A,  BAZINĖ B,  BAZINĖ C ir t.t., TIKSLINES: TIKSLINĖ A,  TIKSLINĖ B,  TIKSLINĖ C  ir t.t., ir pasirinktu momentu pamatavę FAKTINES RODIKLIŲ REIKŠMES:  FAKTINĖ A,  FAKTINĖ B,  FAKTINĖ C ir t.t., apskaičiuojame kintamas atlyginimo dalis pagal rodiklius: KINTAMA  A,  KINTAMA B,  KINTAMA C ir t.t. Tokiu būdu:

KINTAMA DALIS PAGAL RODIKLIUS = KINTAMA  A  +  KINTAMA B  +  KINTAMA C  + …

KINTAMA DALIS PAGAL UŽDUOTIS - jeigu įmonių darbuotojai vykdo įvairias užduotis, tenka vertinti šių užduočių atlikimo efektyvumą. Darbuotojas gali vykdyti keletą užduočių:  UŽDUOTIS X,  UŽDUOTIS Y,  UŽDUOTIS Z  ir t.t. Užduotys pagal savo svarbą gali būti vertinamos skirtingose balų skalėse ( sistemose), t.y. maksimalus įvertinimas kiekvienos užduoties gali būti skirtingas. Mokykloje mes įpratę, kad visi dalykai vertinami vienoje balų skalėje, pvz. maksimalus įvertinimas visų dalykų yra 10. Maksimalius užduočių vertinimus žymėkime: MaxVERT  X,  MaxVERT  Y,  MaxVERT  Z ir t.t. Jei darbuotojas pilnai įvykdo visas užduotis ir gauna maksimalius įvertinimus, tai jis gaus MAKSIMALIĄ KINTAMĄ DALĮ PAGAL UŽDUOTIS ( MaxKDU), kuri nustatoma pagal įmonės galimybes ir užduočių svarbą įmonės tikslų įgyvendinime.

PAVYZDYS : elementariu pvyzdžiu pailiustruosime programos veikimą. Tegul įmonės tikslai aprašomi dviem rodikliais : A - PELNAS ir B - KAŠTAI.

Vyr. vadybininkas MARKO  (įvedame programoje į darbuotojų sąrašą), atlikdamas jam pavestus darbus, įtakoja šiuos rodiklius. BAZINIS ATLYGINIMAS MARKO įvedamas : BAZINIS = 1000. įvedame rodiklių reikšmes:

PELNAS :  BAZINĖ 100000;  TIKSLINĖ  130000;  FAKTINĖ 121000;
KAŠTAI  :  BAZINĖ 500000;  TIKSLINĖ 450000;  FAKTINĖ 480000;

MARKO dar yra motyvuojamas pagal UŽDUOČIŲ vykdymą:

X- SANTYKIS SU KLIENTAIS   MaxVERT = 11  Įvertintas  9;
Y- PREKIŲ GRAŽINIMŲ MINIMIZAVIMAS  MaxVERT  = 9  Įvertintas  5;
Z- KVALIFIKACIJOS KĖLIMAS  MaxVERT = 7; Įvertintas 6;

Jei įmonė pasiektų tikslus pagal šiuos rodiklius ir MARKO gautų aukščiausius įvertinimus pagal užduočių vykdymą, tai įmonė papildomai išmokėtų jam MAKSIMALIĄ KINTAMĄ DALĮ  2700:

Pagal PELNO rodiklį įvedame MaxKD 1200;
Pagal KAŠTŲ rodiklį įvedame MaxKD 800;
Pagal UŽDUOČIŲ vykdymą MaxKDU 700;

Tačiau suskaičiavę prie faktinių rodiklių reikšmių ir faktinių užduočių įvertinimų gauname, kad KINTAMA ATLYGINIMO DALIS  yra 1679:

KINTAMA DALIS PAGAL RODIKLIUS  1160;
KINTAMA DALIS PAGAL UŽDUOTIS  519;

Iš viso šį mėnesį uždirbo:

ATLYGINIMAS = 1000 + 1160 + 519 = 2679;
Maksimaliai galėjo uždirbti 3700.</value>
  </data>
  <data name="AboutRU" xml:space="preserve">
    <value>ДЕЯТЕЛЬНОСТЬ, ЦЕЛЬ, МОТИВАЦИЯ, РЕЗУЛЬТАТ, ВОЗНАГРАЖДЕНИЕ – это пять понятий, которые касаются каждого человека. Каждый, кто осуществляет деятельность, имеет цель, внутреннюю мотивацию, достигает результатов и получает за это вознаграждение. Внутренняя мотивация – основной двигатель достижения цели.


Для того, чтобы цель команды стала целью каждого ее члена, необходимо, чтобы каждый принял участие в формировании, определении этих целей. Тогда при реализации поставленных целей возникает внутренняя мотивация, которая помогает добиться наилучших результатов, и все получают вознаграждение в соответствии с достигнутыми результатами.


Назначение настоящей программы – расчет переменной части заработной платы работников, которая зависит от целей предприятия или команды и достигнутых при реализации этих целей результатов, а также дополнительной переменной части заработной платы, которая зависит от выполнения работником заданий, оценок потребителей или результатов тестов.


Все это позволяет избежать «человеческого фактора» при расчете работникам заработной платы, так как все они получают вознаграждение в соответствии с достигнутыми результатами и возможностями предприятия.


Основу этой программы составляет алгоритм оценки эффективности достижения цели, когда цели выражены основными показателями деятельности предприятия.


При оценке исполнения работником заданий или при проведении опросов потребителей, когда потребители оценивают работников предприятия, а также при проверке компетенции и знаний при помощи тестов, рассчитывается эффективность полученной оценки относительно максимально возможной оценки.


Принимая все это во внимание, заработная плата рассчитывается следующим образом:


ЗАРАБОТНАЯ ПЛАТА = БАЗОВАЯ ЗАРАБОТНАЯ ПЛАТА + ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ПОКАЗАТЕЛЯМИ + ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ЗАДАНИЯМИ


БАЗОВАЯ ЗАРАБОТНАЯ ПЛАТА – это фиксированная часть заработной платы, которая устанавливается для каждого работника в соответствии с возможностями предприятия, компетенцией, должностью, ответственностью работника и т.д. Каждое предприятие имеет собственную методику. Можно основываться и на размере установленной государством минимальной заработной платой.


ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ПОКАЗАТЕЛЯМИ – это самая важная составная часть заработной платы. Большинство предприятий внедрили системы управления деятельностью, которые опираются на совокупность показателей. К таковым можно отнести BSC (Balanced Score Card), Lean, TOC и другие. Всем известны такие показатели, как ПРИБЫЛЬ, ЗАТРАТЫ, ОБЪЕМЫ ПРОИЗВОДСТВА и другие, которые будем называть просто ПОКАЗАТЕЛЬ А, ПОКАЗАТЕЛЬ В, ПОКАЗАТЕЛЬ С и т.д.


При планировании собственной деятельности предприятия определяют свои цели и целевые значения показателей: ЦЕЛЕВОЕ А, ЦЕЛЕВОЕ В, ЦЕЛЕВОЕ С и т.д. (увеличить ПРИБЫЛЬ , уменьшить ЗАТРАТЫ , увеличить ОБЪЕМЫ ПРОИЗВОДСТВА и тому подобное). Имея эту информацию можно вычислить, каким может быть максимальный размер фонда заработной платы, если цели будут достигнуты, т.е. МАКСИМАЛЬНАЯ ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ПОКАЗАТЕЛЯМИ ( MaxПЧ ПОКАЗАТЕЛЕЙ ), а также в соответствии с важностью показателей эту сумму разделить пропорционально показателям: MaxПЧ А, MaxПЧ В, MaxПЧ С и т.д.


MaxПЧ ПОКАЗАТЕЛЕЙ = MaxПЧ A + MaxПЧ B + MaxПЧ C + …


Аналогично для каждого работника в соответствии с выбранными показателями устанавливаем размер максимальных переменных частей. Зная БАЗОВЫЕ (начальные) значения показателей: БАЗОВОЕ А, БАЗОВОЕ В, БАЗОВОЕ С и т.д., ЦЕЛЕВЫЕ : ЦЕЛЕВОЕ А, ЦЕЛЕВОЕ В, ЦЕЛЕВОЕ С и т.д., и измерив в выбранный момент ФАКТИЧЕСКИЕ ЗНАЧЕНИЯ ПОКАЗАТЕЛЕЙ: ФАКТИЧЕСКОЕ А, ФАКТИЧЕСКОЕ В, ФАКТИЧЕСКОЕ С и т.д., вычисляем переменные части заработной платы в соответствии с показателями: ПЕРЕМЕННАЯ А, ПЕРЕМЕННАЯ В, ПЕРЕМЕННАЯ С и т.д. Получаем:

ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ПОКАЗАТЕЛЯМИ = ПЕРЕМЕННАЯ A + ПЕРЕМЕННАЯ B + ПЕРЕМЕННАЯ C + …


ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ЗАДАНИЯМИ – если работники предприятий выполняют различные задания, то приходится оценивать эффективность выполнения этих заданий. Работник может выполнять несколько заданий: ЗАДАНИЕ X, ЗАДАНИЕ Y, ЗАДАНИЕ Z и т.д. В соответствии со своей важностью задания могут быть оценены по разным балловым шкалам (системам), т.е. максимальная оценка каждого задания может быть разной. В школе мы привыкли, что все предметы оценивались по одной шкале, например, максимальная оценка предметов составляет 10. Максимальные оценки заданий будем обозначать: MaxОЦ X, MaxОЦ Y, MaxОЦ Z и т.д. Если работник полностью выполнит все задания и получит максимальные оценки, то он получит МАКСИМАЛЬНУЮ ПЕРЕМЕННУЮ ЧАСТЬ В СООТВЕТСТВИИ С ЗАДАНИЯМИ (MaxПЧЗ), которая устанавливается в соответствии с возможностями предприятия и важностью заданий для реализации целей предприятия.


ПРИМЕР : на элементарном примере проиллюстрируем действие программы.

Пусть цели предприятия будут описаны двумя показателями: A – ПРИБЫЛЬ И B - ЗАТРАТЫ.


Ст. менеджер МАРКО (вводим в программе в список работников) при выполнении порученной ему работы влияет на данные показатели. БАЗОВАЯ ЗАРАБОТНАЯ ПЛАТА для МАРКО вводится: БАЗОВАЯ = 1000. Вводим значения показателей:

ПРИБЫЛЬ: БАЗОВОЕ 100000; ЦЕЛЕВОЕ 130000; ФАКТИЧЕСКОЕ 121000;

ЗАТРАТЫ: БАЗОВОЕ 500000; ЦЕЛЕВОЕ 450000; ФАКТИЧЕСКОЕ 480000;

МАРКО еще мотивируется в соответствии с исполнением ЗАДАНИЙ:

X – ОТНОШЕНИЯ С КЛИЕНТАМИ MaxОЦ = 11; Оценен 9;

Y – МИНИМИЗАЦИЯ ВОЗВРАТА ТОВАРОВ MaxОЦ = 9; Оценен 5;

Z – ПОВЫШЕНИЕ КВАЛИФИКАЦИИ Max ОЦ = 7; Оценен 6;

Если бы предприятие достигло целей по этим показателям, и МАРКО получил бы высшие оценки по исполнению заданий, то предприятие дополнительно выплатило бы ему МАКСИМАЛЬНУЮ ПЕРЕМЕННУЮ ЧАСТЬ 2700:

По показателю ПРИБЫЛЬ вводим MaxПЧ 1200;

По показателю ЗАТРАТЫ вводим MaxПЧ 800;

По исполнению ЗАДАНИЙ MaxПЧЗ 700;

Однако, сосчитав значения фактических показателей и фактические оценки заданий, получаем, что ПЕРЕМЕННАЯ ЧАСТЬ ЗАРАБОТНОЙ ПЛАТЫ составляет 1679:

ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ПОКАЗАТЕЛЯМИ 1160;

ПЕРЕМЕННАЯ ЧАСТЬ В СООТВЕТСТВИИ С ЗАДАНИЯМИ 519;

Всего МАРКО в этом месяце заработал:

ЗАРАБОТНАЯ ПЛАТА = 1000 + 1160 + 519 = 2679;


Максимально он мог заработать 3700.
r</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="dd66325dba3d29ac" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\dd66325dba3d29ac.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HelpEN" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\HelpEN.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HelpLT" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\HelpLT.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="HelpRU" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\HelpRU.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>